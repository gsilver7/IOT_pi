{"version":3,"file":"helper.js","sourceRoot":"","sources":["../../../src/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { randomBytes } from \"crypto\";\n\nimport { Event } from \"./imports/common\";\n\nexport function randomString(length: number) {\n  return randomBytes(length).toString(\"hex\").substring(0, length);\n}\n\nexport function randomTransactionId() {\n  return randomBytes(12);\n}\n\nexport function bufferXor(a: Buffer, b: Buffer): Buffer {\n  if (a.length !== b.length) {\n    throw new TypeError(\n      \"[webrtc-stun] You can not XOR buffers which length are different\",\n    );\n  }\n\n  const length = a.length;\n  const buffer = Buffer.allocUnsafe(length);\n\n  for (let i = 0; i < length; i++) {\n    buffer[i] = a[i] ^ b[i];\n  }\n\n  return buffer;\n}\n\nexport function difference<T>(x: Set<T>, y: Set<T>) {\n  return new Set([...x].filter((e) => !y.has(e)));\n}\n\n// infinite size queue\nexport class PQueue<T> {\n  private queue: Promise<T>[] = [];\n  private wait = new Event<[Promise<T>]>();\n\n  put(v: Promise<T>) {\n    this.queue.push(v);\n    if (this.queue.length === 1) {\n      this.wait.execute(v);\n    }\n  }\n\n  get(): Promise<T> {\n    const v = this.queue.shift();\n    if (!v) {\n      return new Promise((r) => {\n        this.wait.subscribe((v) => {\n          this.queue.shift();\n          r(v);\n        });\n      });\n    }\n    return v!;\n  }\n}\n\nexport const cancelable = <T>(\n  ex: (\n    resolve: (value: T | PromiseLike<T>) => void,\n    reject: (reason?: any) => void,\n    onCancel: Event<[any]>,\n  ) => Promise<void>,\n) => {\n  let resolve!: (value: T | PromiseLike<T>) => void;\n  let reject!: (reason?: any) => void;\n\n  const p = new Promise<T>((r, f) => {\n    resolve = r;\n    reject = f;\n  });\n  p.then(() => {\n    onCancel.execute(undefined);\n    onCancel.complete();\n  }).catch((e) => {\n    onCancel.execute(e ?? new Error());\n    onCancel.complete();\n  });\n\n  const onCancel = new Event<[any]>();\n\n  ex(resolve, reject, onCancel).catch(() => {});\n\n  return { awaitable: p, resolve, reject };\n};\n\nexport type Cancelable<T> = ReturnType<typeof cancelable<T>>;\n"]}