{"version":3,"file":"helper.js","sourceRoot":"","sources":["../../../src/helper.ts"],"names":[],"mappings":";;AAEA,8BAEC;AAID,oDAKC;AAbD,6CAAyC;AAEzC,SAAgB,SAAS,CAAI,GAAQ;IACnC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC;AAID,SAAgB,oBAAoB,CAAI,IAAkB;IACxD,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,GAAQ,EAAE,GAAM,EAAE,EAAE;QACtC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,cAAK,EAAE,CAAC;QACvB,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC","sourcesContent":["import { Event } from \"./imports/common\";\n\nexport function enumerate<T>(arr: T[]): [number, T][] {\n  return arr.map((v, i) => [i, v]);\n}\n\nexport type Unpacked<T> = T extends { [K in keyof T]: infer U } ? U : never;\n\nexport function createEventsFromList<T>(list: readonly T[]) {\n  return list.reduce((acc: any, cur: T) => {\n    acc[cur] = new Event();\n    return acc;\n  }, {});\n}\n"]}