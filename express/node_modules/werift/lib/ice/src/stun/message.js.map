{"version":3,"file":"message.js","sourceRoot":"","sources":["../../../../../ice/src/stun/message.ts"],"names":[],"mappings":"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","sourcesContent":["import { createHmac } from \"crypto\";\nimport { jspack } from \"@shinyoshiaki/jspack\";\nimport crc32 from \"buffer-crc32\";\n\nimport { bufferXor, randomTransactionId } from \"../helper\";\nimport {\n  ATTRIBUTES_BY_NAME,\n  ATTRIBUTES_BY_TYPE,\n  type AttributeKey,\n  type AttributePair,\n  AttributeRepository,\n  packXorAddress,\n  unpackXorAddress,\n} from \"./attributes\";\nimport {\n  COOKIE,\n  FINGERPRINT_LENGTH,\n  FINGERPRINT_XOR,\n  HEADER_LENGTH,\n  INTEGRITY_LENGTH,\n  classes,\n  methods,\n} from \"./const\";\n\nexport function parseMessage(\n  data: Buffer,\n  integrityKey?: Buffer,\n): Message | undefined {\n  if (data.length < HEADER_LENGTH) {\n    return undefined;\n  }\n\n  const length = data.readUint16BE(2);\n\n  if (data.length !== HEADER_LENGTH + length) {\n    return undefined;\n  }\n\n  const messageType = data.readUint16BE(0);\n  const transactionId = Buffer.from(\n    data.slice(HEADER_LENGTH - 12, HEADER_LENGTH),\n  );\n\n  const attributeRepository = new AttributeRepository();\n\n  for (let pos = HEADER_LENGTH; pos <= data.length - 4; ) {\n    const attrType = data.readUInt16BE(pos);\n    const attrLen = data.readUInt16BE(pos + 2);\n    const payload = data.slice(pos + 4, pos + 4 + attrLen);\n    const padLen = 4 * Math.floor((attrLen + 3) / 4) - attrLen;\n    const attributesTypes = Object.keys(ATTRIBUTES_BY_TYPE);\n    if (attributesTypes.includes(attrType.toString())) {\n      const [, attrName, , attrUnpack] = ATTRIBUTES_BY_TYPE[attrType];\n      if (attrUnpack.name === unpackXorAddress.name) {\n        attributeRepository.setAttribute(\n          attrName as AttributeKey,\n          attrUnpack(payload, transactionId),\n        );\n      } else {\n        attributeRepository.setAttribute(\n          attrName as AttributeKey,\n          attrUnpack(payload),\n        );\n      }\n\n      if (attrName === \"FINGERPRINT\") {\n        const fingerprint = messageFingerprint(data.slice(0, pos));\n        const expect = attributeRepository.getAttributeValue(\"FINGERPRINT\");\n        if (expect !== fingerprint) {\n          return undefined;\n        }\n      } else if (attrName === \"MESSAGE-INTEGRITY\") {\n        if (integrityKey) {\n          const integrity = messageIntegrity(data.slice(0, pos), integrityKey);\n          const expect =\n            attributeRepository.getAttributeValue(\"MESSAGE-INTEGRITY\");\n          if (!integrity.equals(expect)) {\n            return undefined;\n          }\n        }\n      }\n    }\n    pos += 4 + attrLen + padLen;\n  }\n\n  const attributes = attributeRepository.getAttributes();\n  attributeRepository.clear();\n\n  return new Message(\n    messageType & 0x3eef,\n    messageType & 0x0110,\n    transactionId,\n    attributes,\n  );\n}\n\nexport class Message extends AttributeRepository {\n  constructor(\n    public messageMethod: methods,\n    public messageClass: classes,\n    public transactionId: Buffer = randomTransactionId(),\n    attributes: AttributePair[] = [],\n  ) {\n    super(attributes);\n  }\n\n  toJSON() {\n    return this.json;\n  }\n\n  get json() {\n    return {\n      messageMethod: methods[this.messageMethod],\n      messageClass: classes[this.messageClass],\n      attributes: this.attributes,\n    };\n  }\n\n  get transactionIdHex() {\n    return this.transactionId.toString(\"hex\");\n  }\n\n  get bytes() {\n    let data = Buffer.from([]);\n    for (const attrName of this.attributesKeys) {\n      const attrValue = this.getAttributeValue(attrName);\n      const [attrType, , attrPack] = ATTRIBUTES_BY_NAME[attrName];\n      const v =\n        attrPack.name === packXorAddress.name\n          ? attrPack(attrValue, this.transactionId)\n          : attrPack(attrValue);\n      const attrLen = v.length;\n      const padLen = 4 * Math.floor((attrLen + 3) / 4) - attrLen;\n      const attrHeader = Buffer.alloc(4);\n      attrHeader.writeUInt16BE(attrType, 0);\n      attrHeader.writeUInt16BE(attrLen, 2);\n      data = Buffer.concat([data, attrHeader, v, Buffer.alloc(padLen, 0)]);\n    }\n    const buf = Buffer.alloc(8);\n    buf.writeUInt16BE(this.messageMethod | this.messageClass, 0);\n    buf.writeUInt16BE(data.length, 2);\n    buf.writeUInt32BE(COOKIE, 4);\n\n    return Buffer.concat([buf, this.transactionId, data]);\n  }\n\n  addMessageIntegrity(key: Buffer) {\n    this.setAttribute(\"MESSAGE-INTEGRITY\", this.messageIntegrity(key));\n    return this;\n  }\n\n  messageIntegrity(key: Buffer) {\n    const checkData = setBodyLength(\n      this.bytes,\n      this.bytes.length - HEADER_LENGTH + INTEGRITY_LENGTH,\n    );\n    return Buffer.from(\n      createHmac(\"sha1\", key).update(checkData).digest(\"hex\"),\n      \"hex\",\n    );\n  }\n\n  addFingerprint() {\n    this.setAttribute(\"FINGERPRINT\", messageFingerprint(this.bytes));\n  }\n}\n\nconst setBodyLength = (data: Buffer, length: number) => {\n  const output = Buffer.alloc(data.length);\n  data.copy(output, 0, 0, 2);\n  output.writeUInt16BE(length, 2);\n  data.copy(output, 4, 4);\n  return output;\n};\n\nfunction messageFingerprint(data: Buffer) {\n  const checkData = setBodyLength(\n    data,\n    data.length - HEADER_LENGTH + FINGERPRINT_LENGTH,\n  );\n  const crc32Buf = crc32(checkData);\n  const xorBuf = Buffer.alloc(4);\n  xorBuf.writeInt32BE(FINGERPRINT_XOR, 0);\n  const fingerprint = bufferXor(crc32Buf, xorBuf);\n  return fingerprint.readUInt32BE(0);\n}\n\nfunction messageIntegrity(data: Buffer, key: Buffer) {\n  const checkData = setBodyLength(\n    data,\n    data.length - HEADER_LENGTH + INTEGRITY_LENGTH,\n  );\n  return Buffer.from(\n    createHmac(\"sha1\", key).update(checkData).digest(\"hex\"),\n    \"hex\",\n  );\n}\n\nexport function paddingLength(length: number) {\n  const rest = length % 4;\n  if (rest === 0) {\n    return 0;\n  } else {\n    return 4 - rest;\n  }\n}\n"]}