{"version":3,"file":"codec.js","sourceRoot":"","sources":["../../../../src/media/codec.ts"],"names":[],"mappings":";;;AAAA,2DAAoE;AACpE,6CAAqD;AAE9C,MAAM,OAAO,GAAG,CAAC,QAAwC,EAAE,EAAE,EAAE,CACpE,IAAI,kCAAqB,CAAC;IACxB,QAAQ,EAAE,YAAY;IACtB,SAAS,EAAE,KAAK;IAChB,YAAY,EAAE,CAAC,IAAA,sBAAO,GAAE,EAAE,IAAA,qBAAM,GAAE,EAAE,IAAA,sBAAO,GAAE,CAAC;IAC9C,UAAU,EACR,wEAAwE;IAC1E,GAAG,KAAK;CACT,CAAC,CAAC;AARQ,QAAA,OAAO,WAQf;AAEE,MAAM,MAAM,GAAG,CAAC,QAAwC,EAAE,EAAE,EAAE,CACnE,IAAI,kCAAqB,CAAC;IACxB,QAAQ,EAAE,WAAW;IACrB,SAAS,EAAE,KAAK;IAChB,YAAY,EAAE,CAAC,IAAA,sBAAO,GAAE,EAAE,IAAA,qBAAM,GAAE,EAAE,IAAA,sBAAO,GAAE,CAAC;IAC9C,GAAG,KAAK;CACT,CAAC,CAAC;AANQ,QAAA,MAAM,UAMd;AAEE,MAAM,MAAM,GAAG,CAAC,QAAwC,EAAE,EAAE,EAAE,CACnE,IAAI,kCAAqB,CAAC;IACxB,QAAQ,EAAE,WAAW;IACrB,SAAS,EAAE,KAAK;IAChB,YAAY,EAAE,CAAC,IAAA,sBAAO,GAAE,EAAE,IAAA,qBAAM,GAAE,EAAE,IAAA,sBAAO,GAAE,CAAC;IAC9C,GAAG,KAAK;CACT,CAAC,CAAC;AANQ,QAAA,MAAM,UAMd;AAEE,MAAM,OAAO,GAAG,CAAC,QAAwC,EAAE,EAAE,EAAE,CACpE,IAAI,kCAAqB,CAAC;IACxB,QAAQ,EAAE,YAAY;IACtB,SAAS,EAAE,KAAK;IAChB,YAAY,EAAE,CAAC,IAAA,sBAAO,GAAE,EAAE,IAAA,qBAAM,GAAE,EAAE,IAAA,sBAAO,GAAE,CAAC;IAC9C,GAAG,KAAK;CACT,CAAC,CAAC;AANQ,QAAA,OAAO,WAMf;AAEE,MAAM,OAAO,GAAG,CAAC,QAAwC,EAAE,EAAE,EAAE,CACpE,IAAI,kCAAqB,CAAC;IACxB,QAAQ,EAAE,YAAY;IACtB,SAAS,EAAE,KAAK;IAChB,QAAQ,EAAE,CAAC;IACX,GAAG,KAAK;CACT,CAAC,CAAC;AANQ,QAAA,OAAO,WAMf;AAEE,MAAM,OAAO,GAAG,CAAC,QAAwC,EAAE,EAAE,EAAE,CACpE,IAAI,kCAAqB,CAAC;IACxB,QAAQ,EAAE,YAAY;IACtB,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC;IACX,WAAW,EAAE,CAAC;IACd,GAAG,KAAK;CACT,CAAC,CAAC;AAPQ,QAAA,OAAO,WAOf;AAEQ,QAAA,eAAe,GAAG;IAC7B,IAAA,eAAO,GAAE;IACT,IAAA,cAAM,GAAE;IACR,IAAA,cAAM,GAAE;IACR,IAAA,eAAO,GAAE;IACT,IAAA,eAAO,GAAE;IACT,IAAA,eAAO,GAAE;CACV,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAEpB,QAAA,oBAAoB,GAAG,uBAAe,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CACnE,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CACzC,CAAC;AAEW,QAAA,oBAAoB,GAAG,uBAAe,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CACnE,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CACzC,CAAC","sourcesContent":["import { useNACK, usePLI, useREMB } from \"./extension/rtcpFeedback\";\nimport { RTCRtpCodecParameters } from \"./parameters\";\n\nexport const useH264 = (props: Partial<RTCRtpCodecParameters> = {}) =>\n  new RTCRtpCodecParameters({\n    mimeType: \"video/h264\",\n    clockRate: 90000,\n    rtcpFeedback: [useNACK(), usePLI(), useREMB()],\n    parameters:\n      \"profile-level-id=42e01f;packetization-mode=1;level-asymmetry-allowed=1\",\n    ...props,\n  });\n\nexport const useVP8 = (props: Partial<RTCRtpCodecParameters> = {}) =>\n  new RTCRtpCodecParameters({\n    mimeType: \"video/VP8\",\n    clockRate: 90000,\n    rtcpFeedback: [useNACK(), usePLI(), useREMB()],\n    ...props,\n  });\n\nexport const useVP9 = (props: Partial<RTCRtpCodecParameters> = {}) =>\n  new RTCRtpCodecParameters({\n    mimeType: \"video/VP9\",\n    clockRate: 90000,\n    rtcpFeedback: [useNACK(), usePLI(), useREMB()],\n    ...props,\n  });\n\nexport const useAV1X = (props: Partial<RTCRtpCodecParameters> = {}) =>\n  new RTCRtpCodecParameters({\n    mimeType: \"video/AV1X\",\n    clockRate: 90000,\n    rtcpFeedback: [useNACK(), usePLI(), useREMB()],\n    ...props,\n  });\n\nexport const useOPUS = (props: Partial<RTCRtpCodecParameters> = {}) =>\n  new RTCRtpCodecParameters({\n    mimeType: \"audio/OPUS\",\n    clockRate: 48000,\n    channels: 2,\n    ...props,\n  });\n\nexport const usePCMU = (props: Partial<RTCRtpCodecParameters> = {}) =>\n  new RTCRtpCodecParameters({\n    mimeType: \"audio/PCMU\",\n    clockRate: 8000,\n    channels: 1,\n    payloadType: 0,\n    ...props,\n  });\n\nexport const supportedCodecs = [\n  useAV1X(),\n  useVP9(),\n  useVP8(),\n  useH264(),\n  useOPUS(),\n  usePCMU(),\n].map((codec) => codec.mimeType);\n\nexport const supportedVideoCodecs = supportedCodecs.filter((codec) =>\n  codec.toLowerCase().startsWith(\"video/\"),\n);\n\nexport const supportedAudioCodecs = supportedCodecs.filter((codec) =>\n  codec.toLowerCase().startsWith(\"audio/\"),\n);\n"]}