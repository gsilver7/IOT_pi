{"version":3,"file":"stats.js","sourceRoot":"","sources":["../../../../src/media/stats.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AA4UH,0CAMC;AAKD,8CAEC;AA9BD;;GAEG;AACH,MAAa,cAAe,SAAQ,GAAqB;IACvD,YAAY,KAAuB;QACjC,KAAK,EAAE,CAAC;QACR,IAAI,KAAK,EAAE,CAAC;YACV,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;CACF;AATD,wCASC;AAED;;GAEG;AACH,SAAgB,eAAe,CAC7B,IAAY,EACZ,GAAG,KAAsC;IAEzC,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;IACxD,OAAO,GAAG,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;AAC3C,CAAC;AAED;;GAEG;AACH,SAAgB,iBAAiB;IAC/B,OAAO,WAAW,CAAC,GAAG,EAAE,CAAC;AAC3B,CAAC","sourcesContent":["/**\n * WebRTC Statistics API implementation\n * Based on: https://www.w3.org/TR/webrtc-stats/\n */\n\nexport type RTCStatsType =\n  | \"codec\"\n  | \"inbound-rtp\"\n  | \"outbound-rtp\"\n  | \"remote-inbound-rtp\"\n  | \"remote-outbound-rtp\"\n  | \"media-source\"\n  | \"peer-connection\"\n  | \"data-channel\"\n  | \"transport\"\n  | \"candidate-pair\"\n  | \"local-candidate\"\n  | \"remote-candidate\"\n  | \"certificate\";\n\nexport interface RTCStats {\n  timestamp: number;\n  type: RTCStatsType;\n  id: string;\n}\n\nexport interface RTCRtpStreamStats extends RTCStats {\n  ssrc: number;\n  kind: string;\n  transportId?: string;\n  codecId?: string;\n}\n\nexport interface RTCReceivedRtpStreamStats extends RTCRtpStreamStats {\n  packetsReceived?: number;\n  packetsLost?: number;\n  jitter?: number;\n  packetsDiscarded?: number;\n  packetsRepaired?: number;\n  burstPacketsLost?: number;\n  burstPacketsDiscarded?: number;\n  burstLossCount?: number;\n  burstDiscardCount?: number;\n  burstLossRate?: number;\n  burstDiscardRate?: number;\n  gapLossRate?: number;\n  gapDiscardRate?: number;\n  framesDropped?: number;\n  partialFramesLost?: number;\n  fullFramesLost?: number;\n}\n\nexport interface RTCInboundRtpStreamStats extends RTCReceivedRtpStreamStats {\n  type: \"inbound-rtp\";\n  trackIdentifier?: string;\n  mid?: string;\n  remoteId?: string;\n  framesDecoded?: number;\n  keyFramesDecoded?: number;\n  frameWidth?: number;\n  frameHeight?: number;\n  frameBitDepth?: number;\n  framesPerSecond?: number;\n  qpSum?: number;\n  totalDecodeTime?: number;\n  totalInterFrameDelay?: number;\n  totalSquaredInterFrameDelay?: number;\n  lastPacketReceivedTimestamp?: number;\n  headerBytesReceived?: number;\n  packetsFailedDecryption?: number;\n  packetsDuplicated?: number;\n  perDscpPacketsReceived?: Record<string, number>;\n  nackCount?: number;\n  firCount?: number;\n  pliCount?: number;\n  totalProcessingDelay?: number;\n  estimatedPlayoutTimestamp?: number;\n  jitterBufferDelay?: number;\n  jitterBufferTargetDelay?: number;\n  jitterBufferEmittedCount?: number;\n  jitterBufferMinimumDelay?: number;\n  totalSamplesReceived?: number;\n  concealedSamples?: number;\n  silentConcealedSamples?: number;\n  concealmentEvents?: number;\n  insertedSamplesForDeceleration?: number;\n  removedSamplesForAcceleration?: number;\n  audioLevel?: number;\n  totalAudioEnergy?: number;\n  totalSamplesDuration?: number;\n  framesReceived?: number;\n  decoderImplementation?: string;\n  playoutId?: string;\n  powerEfficientDecoder?: boolean;\n  framesAssembledFromMultiplePackets?: number;\n  totalAssemblyTime?: number;\n  retransmittedPacketsReceived?: number;\n  retransmittedBytesReceived?: number;\n  rtxSsrc?: number;\n  fecSsrc?: number;\n}\n\nexport interface RTCSentRtpStreamStats extends RTCRtpStreamStats {\n  packetsSent?: number;\n  bytesSent?: number;\n}\n\nexport interface RTCOutboundRtpStreamStats extends RTCSentRtpStreamStats {\n  type: \"outbound-rtp\";\n  mid?: string;\n  mediaSourceId?: string;\n  remoteId?: string;\n  rid?: string;\n  headerBytesSent?: number;\n  retransmittedPacketsSent?: number;\n  retransmittedBytesSent?: number;\n  rtxSsrc?: number;\n  targetBitrate?: number;\n  totalEncodedBytesTarget?: number;\n  frameWidth?: number;\n  frameHeight?: number;\n  frameBitDepth?: number;\n  framesPerSecond?: number;\n  framesSent?: number;\n  hugeFramesSent?: number;\n  framesEncoded?: number;\n  keyFramesEncoded?: number;\n  qpSum?: number;\n  totalEncodeTime?: number;\n  totalPacketSendDelay?: number;\n  qualityLimitationReason?: string;\n  qualityLimitationDurations?: Record<string, number>;\n  qualityLimitationResolutionChanges?: number;\n  perDscpPacketsSent?: Record<string, number>;\n  nackCount?: number;\n  firCount?: number;\n  pliCount?: number;\n  encoderImplementation?: string;\n  powerEfficientEncoder?: boolean;\n  active?: boolean;\n  scalabilityMode?: string;\n}\n\nexport interface RTCRemoteInboundRtpStreamStats\n  extends RTCReceivedRtpStreamStats {\n  type: \"remote-inbound-rtp\";\n  localId?: string;\n  roundTripTime?: number;\n  totalRoundTripTime?: number;\n  fractionLost?: number;\n  roundTripTimeMeasurements?: number;\n}\n\nexport interface RTCRemoteOutboundRtpStreamStats extends RTCSentRtpStreamStats {\n  type: \"remote-outbound-rtp\";\n  localId?: string;\n  remoteTimestamp?: number;\n  reportsSent?: number;\n  roundTripTime?: number;\n  totalRoundTripTime?: number;\n  roundTripTimeMeasurements?: number;\n}\n\nexport interface RTCMediaSourceStats extends RTCStats {\n  type: \"media-source\";\n  trackIdentifier: string;\n  kind: string;\n}\n\nexport interface RTCVideoSourceStats extends RTCMediaSourceStats {\n  width?: number;\n  height?: number;\n  frames?: number;\n  framesPerSecond?: number;\n}\n\nexport interface RTCAudioSourceStats extends RTCMediaSourceStats {\n  audioLevel?: number;\n  totalAudioEnergy?: number;\n  totalSamplesDuration?: number;\n  echoReturnLoss?: number;\n  echoReturnLossEnhancement?: number;\n  droppedSamplesDuration?: number;\n  droppedSamplesEvents?: number;\n  totalCaptureDelay?: number;\n  totalSamplesCaptured?: number;\n}\n\nexport interface RTCPeerConnectionStats extends RTCStats {\n  type: \"peer-connection\";\n  dataChannelsOpened?: number;\n  dataChannelsClosed?: number;\n}\n\nexport interface RTCDataChannelStats extends RTCStats {\n  type: \"data-channel\";\n  label?: string;\n  protocol?: string;\n  dataChannelIdentifier?: number;\n  state: RTCDataChannelState;\n  messagesSent?: number;\n  bytesSent?: number;\n  messagesReceived?: number;\n  bytesReceived?: number;\n}\n\nexport interface RTCTransportStats extends RTCStats {\n  type: \"transport\";\n  bytesSent?: number;\n  packetsSent?: number;\n  bytesReceived?: number;\n  packetsReceived?: number;\n  rtcpTransportStatsId?: string;\n  iceRole?: RTCIceRole;\n  iceLocalUsernameFragment?: string;\n  dtlsState: RTCDtlsTransportState;\n  iceState?: RTCIceTransportState;\n  selectedCandidatePairId?: string;\n  localCertificateId?: string;\n  remoteCertificateId?: string;\n  tlsVersion?: string;\n  dtlsCipher?: string;\n  dtlsRole?: RTCDtlsRole;\n  srtpCipher?: string;\n  selectedCandidatePairChanges?: number;\n  iceRestarts?: number;\n}\n\nexport interface RTCIceCandidateStats extends RTCStats {\n  transportId?: string;\n  address?: string;\n  port?: number;\n  protocol?: string;\n  candidateType: RTCIceCandidateType;\n  priority?: number;\n  url?: string;\n  relayProtocol?: string;\n  foundation?: string;\n  relatedAddress?: string;\n  relatedPort?: number;\n  usernameFragment?: string;\n  tcpType?: RTCIceTcpCandidateType;\n}\n\nexport interface RTCIceCandidatePairStats extends RTCStats {\n  type: \"candidate-pair\";\n  transportId?: string;\n  localCandidateId: string;\n  remoteCandidateId: string;\n  state: RTCStatsIceCandidatePairState;\n  nominated?: boolean;\n  packetsSent?: number;\n  packetsReceived?: number;\n  bytesSent?: number;\n  bytesReceived?: number;\n  lastPacketSentTimestamp?: number;\n  lastPacketReceivedTimestamp?: number;\n  totalRoundTripTime?: number;\n  currentRoundTripTime?: number;\n  availableOutgoingBitrate?: number;\n  availableIncomingBitrate?: number;\n  requestsReceived?: number;\n  requestsSent?: number;\n  responsesReceived?: number;\n  responsesSent?: number;\n  retransmissionsReceived?: number;\n  retransmissionsSent?: number;\n  consentRequestsSent?: number;\n  consentExpiredTimestamp?: number;\n  packetsDiscardedOnSend?: number;\n  bytesDiscardedOnSend?: number;\n}\n\nexport interface RTCCertificateStats extends RTCStats {\n  type: \"certificate\";\n  fingerprint: string;\n  fingerprintAlgorithm: string;\n  base64Certificate: string;\n  issuerCertificateId?: string;\n}\n\nexport interface RTCCodecStats extends RTCStats {\n  type: \"codec\";\n  payloadType: number;\n  transportId: string;\n  mimeType: string;\n  clockRate?: number;\n  channels?: number;\n  sdpFmtpLine?: string;\n}\n\n// Type definitions\nexport type RTCDataChannelState = \"connecting\" | \"open\" | \"closing\" | \"closed\";\nexport type RTCDtlsTransportState =\n  | \"new\"\n  | \"connecting\"\n  | \"connected\"\n  | \"closed\"\n  | \"failed\";\nexport type RTCIceTransportState =\n  | \"new\"\n  | \"checking\"\n  | \"connected\"\n  | \"completed\"\n  | \"disconnected\"\n  | \"failed\"\n  | \"closed\";\nexport type RTCIceRole = \"controlling\" | \"controlled\";\nexport type RTCDtlsRole = \"client\" | \"server\";\nexport type RTCIceCandidateType = \"host\" | \"srflx\" | \"prflx\" | \"relay\";\nexport type RTCIceTcpCandidateType = \"active\" | \"passive\" | \"so\";\nexport type RTCStatsIceCandidatePairState =\n  | \"frozen\"\n  | \"waiting\"\n  | \"in-progress\"\n  | \"failed\"\n  | \"succeeded\";\n\n/**\n * RTCStatsReport is a Map-like object that holds WebRTC statistics\n */\nexport class RTCStatsReport extends Map<string, RTCStats> {\n  constructor(stats?: Array<RTCStats>) {\n    super();\n    if (stats) {\n      for (const stat of stats) {\n        this.set(stat.id, stat);\n      }\n    }\n  }\n}\n\n/**\n * Generate a unique ID for a statistics object\n */\nexport function generateStatsId(\n  type: string,\n  ...parts: (string | number | undefined)[]\n): string {\n  const validParts = parts.filter((p) => p !== undefined);\n  return `${type}_${validParts.join(\"_\")}`;\n}\n\n/**\n * Get current timestamp in milliseconds (DOMHighResTimeStamp)\n */\nexport function getStatsTimestamp(): number {\n  return performance.now();\n}\n"]}