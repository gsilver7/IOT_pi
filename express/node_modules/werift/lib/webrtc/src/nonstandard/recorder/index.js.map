{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/nonstandard/recorder/index.ts"],"names":[],"mappings":";;;AAAA,iDAA6C;AAO7C,wCAA4C;AAI5C,MAAa,aAAa;IAOxB,YACS,KAoBJ;QApBH;;;;mBAAO,KAAK;WAoBT;QA3BL;;;;;WAAoB;QACpB;;;;;WAAa;QACb;;;;mBAA6B,EAAE;WAAC;QAChC;;;;mBAAU,KAAK;WAAC;QAChB;;;;mBAAU,IAAI,cAAK,EAAW;WAAC;QAyB7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;QAE1C,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QAE/B,IAAI,IAAI,EAAE,CAAC;YACT,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE;gBAClB,QAAQ,IAAI,CAAC,GAAG,EAAE,CAAC;oBACjB,KAAK,MAAM;wBACT,OAAO,IAAI,kBAAW,CAAC;4BACrB,GAAG,KAAK;4BACR,IAAI,EAAE,IAAK;4BACX,MAAM,EAAE,MAAO;yBAChB,CAAC,CAAC;oBACL;wBACE,MAAM,IAAI,KAAK,EAAE,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,EAAE,CAAC;QACP,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,MAAM,GAAG,IAAI,kBAAW,CAAC;gBAC5B,GAAG,KAAK;gBACR,IAAI,EAAE,IAAK;gBACX,MAAM,EAAE,MAAO;aAChB,CAAC,CAAC;QACL,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAC5C,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,KAAuB;QACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAEO,KAAK,CAAC,KAAK;QACjB,IACE,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW;YAC7C,IAAI,CAAC,OAAO,KAAK,KAAK,EACtB,CAAC;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;CACF;AAlFD,sCAkFC","sourcesContent":["import { Event } from \"../../imports/common\";\nimport type {\n  JitterBufferOptions,\n  LipSyncOptions,\n} from \"../../imports/rtpExtra\";\nimport type { MediaStreamTrack } from \"../../media/track\";\nimport type { MediaWriter, StreamEvent } from \"./writer\";\nimport { WebmFactory } from \"./writer/webm\";\n\nexport type { StreamEvent };\n\nexport class MediaRecorder {\n  writer: MediaWriter;\n  ext?: string;\n  tracks: MediaStreamTrack[] = [];\n  started = false;\n  onError = new Event<[Error]>();\n\n  constructor(\n    public props: Partial<MediaRecorderOptions> &\n      (\n        | {\n            numOfTracks: number;\n            tracks?: MediaStreamTrack[];\n          }\n        | {\n            numOfTracks?: number;\n            tracks: MediaStreamTrack[];\n          }\n      ) &\n      (\n        | {\n            path: string;\n            stream?: StreamEvent;\n          }\n        | {\n            path?: string;\n            stream: StreamEvent;\n          }\n      ),\n  ) {\n    this.tracks = props.tracks ?? this.tracks;\n\n    const { path, stream } = props;\n\n    if (path) {\n      this.ext = path.split(\".\").slice(-1)[0];\n      this.writer = (() => {\n        switch (this.ext) {\n          case \"webm\":\n            return new WebmFactory({\n              ...props,\n              path: path!,\n              stream: stream!,\n            });\n          default:\n            throw new Error();\n        }\n      })();\n    } else {\n      this.writer = new WebmFactory({\n        ...props,\n        path: path!,\n        stream: stream!,\n      });\n    }\n\n    if (this.tracks.length > 0) {\n      this.props.numOfTracks = this.tracks.length;\n      this.start().catch((error) => {\n        this.onError.execute(error);\n      });\n    }\n  }\n\n  async addTrack(track: MediaStreamTrack) {\n    this.tracks.push(track);\n    await this.start();\n  }\n\n  private async start() {\n    if (\n      this.tracks.length === this.props.numOfTracks &&\n      this.started === false\n    ) {\n      this.started = true;\n      await this.writer.start(this.tracks);\n    }\n  }\n\n  async stop() {\n    await this.writer.stop();\n  }\n}\n\nexport interface MediaRecorderOptions {\n  width: number;\n  height: number;\n  roll: number;\n  disableLipSync: boolean;\n  disableNtp: boolean;\n  defaultDuration: number;\n  tracks: MediaStreamTrack[];\n  lipsync: Partial<LipSyncOptions>;\n  jitterBuffer: Partial<JitterBufferOptions>;\n}\n"]}