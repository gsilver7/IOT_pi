{"version":3,"file":"sdpManager.js","sourceRoot":"","sources":["../../../src/sdpManager.ts"],"names":[],"mappings":"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","sourcesContent":["import { DISCARD_HOST, DISCARD_PORT } from \"./const\";\nimport type { RTCRtpTransceiver } from \"./media\";\nimport { RTCRtpSimulcastParameters } from \"./media/parameters\";\nimport type { MediaDirection } from \"./media/rtpTransceiver\";\nimport {\n  type BundlePolicy,\n  GroupDescription,\n  MediaDescription,\n  SessionDescription,\n  SsrcDescription,\n  addSDPHeader,\n} from \"./sdp\";\nimport type { RTCDtlsTransport } from \"./transport/dtls\";\nimport { RTCSctpTransport } from \"./transport/sctp\";\nimport { andDirection } from \"./utils\";\n\nexport class SDPManager {\n  currentLocalDescription?: SessionDescription;\n  currentRemoteDescription?: SessionDescription;\n  pendingLocalDescription?: SessionDescription;\n  pendingRemoteDescription?: SessionDescription;\n  readonly cname: string;\n  readonly midSuffix: boolean;\n  readonly bundlePolicy?: BundlePolicy;\n\n  private seenMid = new Set<string>();\n\n  constructor({\n    cname,\n    midSuffix,\n    bundlePolicy,\n  }: { cname: string; midSuffix?: boolean; bundlePolicy?: BundlePolicy }) {\n    this.cname = cname;\n    this.midSuffix = midSuffix ?? false;\n    this.bundlePolicy = bundlePolicy;\n  }\n\n  get localDescription() {\n    if (!this._localDescription) {\n      return undefined;\n    }\n    return this._localDescription.toJSON();\n  }\n\n  get remoteDescription() {\n    if (!this._remoteDescription) {\n      return undefined;\n    }\n    return this._remoteDescription.toJSON();\n  }\n\n  /**@private */\n  get _localDescription() {\n    return this.pendingLocalDescription || this.currentLocalDescription;\n  }\n\n  /**@private */\n  get _remoteDescription() {\n    return this.pendingRemoteDescription || this.currentRemoteDescription;\n  }\n\n  get inactiveRemoteMedia() {\n    return this._remoteDescription?.media?.find?.(\n      (m) => m.direction === \"inactive\",\n    );\n  }\n\n  /**\n   * MediaDescriptionをトランシーバー用に作成\n   */\n  createMediaDescriptionForTransceiver(\n    transceiver: RTCRtpTransceiver,\n    direction: MediaDirection,\n  ): MediaDescription {\n    const media = new MediaDescription(\n      transceiver.kind,\n      9,\n      \"UDP/TLS/RTP/SAVPF\",\n      transceiver.codecs.map((c) => c.payloadType),\n    );\n    media.direction = direction;\n    media.msid = transceiver.msid;\n    media.rtp = {\n      codecs: transceiver.codecs,\n      headerExtensions: transceiver.headerExtensions,\n      muxId: transceiver.mid,\n    };\n    media.rtcpHost = \"0.0.0.0\";\n    media.rtcpPort = 9;\n    media.rtcpMux = true;\n    media.ssrc = [\n      new SsrcDescription({ ssrc: transceiver.sender.ssrc, cname: this.cname }),\n    ];\n\n    if (transceiver.options.simulcast) {\n      media.simulcastParameters = transceiver.options.simulcast.map(\n        (o) => new RTCRtpSimulcastParameters(o),\n      );\n    }\n\n    if (media.rtp.codecs.find((c) => c.name.toLowerCase() === \"rtx\")) {\n      media.ssrc.push(\n        new SsrcDescription({\n          ssrc: transceiver.sender.rtxSsrc,\n          cname: this.cname,\n        }),\n      );\n      media.ssrcGroup = [\n        new GroupDescription(\"FID\", [\n          transceiver.sender.ssrc.toString(),\n          transceiver.sender.rtxSsrc.toString(),\n        ]),\n      ];\n    }\n\n    this.addTransportDescription(media, transceiver.dtlsTransport);\n    return media;\n  }\n\n  /**\n   * MediaDescriptionをSCTP用に作成\n   */\n  createMediaDescriptionForSctp(sctp: RTCSctpTransport): MediaDescription {\n    const media = new MediaDescription(\n      \"application\",\n      DISCARD_PORT,\n      \"UDP/DTLS/SCTP\",\n      [\"webrtc-datachannel\"],\n    );\n    media.sctpPort = sctp.port;\n    media.rtp.muxId = sctp.mid;\n    media.sctpCapabilities = RTCSctpTransport.getCapabilities();\n\n    this.addTransportDescription(media, sctp.dtlsTransport);\n    return media;\n  }\n\n  /**\n   * トランスポートの情報をMediaDescriptionに追加\n   */\n  addTransportDescription(\n    media: MediaDescription,\n    dtlsTransport: RTCDtlsTransport,\n  ): void {\n    const iceTransport = dtlsTransport.iceTransport;\n\n    media.iceCandidates = iceTransport.localCandidates;\n    media.iceCandidatesComplete = iceTransport.gatheringState === \"complete\";\n    media.iceParams = iceTransport.localParameters;\n    media.iceOptions = \"trickle\";\n\n    media.host = DISCARD_HOST;\n    media.port = DISCARD_PORT;\n\n    if (media.direction === \"inactive\") {\n      media.port = 0;\n      media.msid = undefined;\n    }\n\n    if (!media.dtlsParams) {\n      media.dtlsParams = dtlsTransport.localParameters;\n      if (!media.dtlsParams.fingerprints) {\n        media.dtlsParams.fingerprints =\n          dtlsTransport.localParameters.fingerprints;\n      }\n    }\n  }\n\n  /**\n   * 一意のMIDを割り当て\n   */\n  allocateMid(type: \"dc\" | \"av\" | \"\" = \"\"): string {\n    let mid = \"\";\n    for (let i = 0; ; ) {\n      // rfc9143.html#name-security-considerations\n      // SHOULD be 3 bytes or fewer to allow them to efficiently fit into the MID RTP header extension\n      mid = (i++).toString() + type;\n      if (!this.seenMid.has(mid)) break;\n    }\n    this.seenMid.add(mid);\n    return mid;\n  }\n\n  parseSdp({\n    sdp,\n    isLocal,\n    signalingState,\n    type,\n  }: {\n    sdp: string;\n    isLocal: boolean;\n    signalingState: string;\n    type: \"offer\" | \"answer\";\n  }): SessionDescription {\n    const description = SessionDescription.parse(sdp);\n    this.validateDescription({ description, isLocal, signalingState });\n    description.type = type;\n    return description;\n  }\n\n  private validateDescription({\n    description,\n    isLocal,\n    signalingState,\n  }: {\n    description: SessionDescription;\n    isLocal: boolean;\n    signalingState: string;\n  }) {\n    if (isLocal) {\n      if (description.type === \"offer\") {\n        if (![\"stable\", \"have-local-offer\"].includes(signalingState))\n          throw new Error(\"Cannot handle offer in signaling state\");\n      } else if (description.type === \"answer\") {\n        if (\n          ![\"have-remote-offer\", \"have-local-pranswer\"].includes(signalingState)\n        ) {\n          throw new Error(\"Cannot handle answer in signaling state\");\n        }\n      }\n    } else {\n      if (description.type === \"offer\") {\n        if (![\"stable\", \"have-remote-offer\"].includes(signalingState)) {\n          throw new Error(\"Cannot handle offer in signaling state\");\n        }\n      } else if (description.type === \"answer\") {\n        if (\n          ![\"have-local-offer\", \"have-remote-pranswer\"].includes(signalingState)\n        ) {\n          throw new Error(\"Cannot handle answer in signaling state\");\n        }\n      }\n    }\n  }\n\n  /**\n   * オファーSDPを構築\n   */\n  buildOfferSdp(\n    transceivers: RTCRtpTransceiver[],\n    sctpTransport: RTCSctpTransport | undefined,\n  ): SessionDescription {\n    const description = new SessionDescription();\n    addSDPHeader(\"offer\", description);\n\n    // # handle existing transceivers / sctp\n    const currentMedia = this.currentLocalDescription?.media ?? [];\n\n    currentMedia.forEach((m, i) => {\n      const mid = m.rtp.muxId;\n      if (!mid) {\n        return;\n      }\n      if (m.kind === \"application\") {\n        if (!sctpTransport) {\n          throw new Error(\"sctpTransport not found\");\n        }\n        sctpTransport.mLineIndex = i;\n        description.media.push(\n          this.createMediaDescriptionForSctp(sctpTransport),\n        );\n      } else {\n        const transceiver = transceivers.find((t) => t.mid === mid);\n        if (!transceiver) {\n          if (m.direction === \"inactive\") {\n            description.media.push(m);\n            return;\n          }\n          throw new Error(\"transceiver not found\");\n        }\n        transceiver.mLineIndex = i;\n        description.media.push(\n          this.createMediaDescriptionForTransceiver(\n            transceiver,\n            transceiver.direction,\n          ),\n        );\n      }\n    });\n\n    // # handle new transceivers / sctp\n    for (const transceiver of transceivers.filter(\n      (t) => !description.media.find((m) => m.rtp.muxId === t.mid),\n    )) {\n      if (transceiver.mid == undefined) {\n        transceiver.mid = this.allocateMid(this.midSuffix ? \"av\" : \"\");\n      }\n      const mediaDescription = this.createMediaDescriptionForTransceiver(\n        transceiver,\n        transceiver.direction,\n      );\n      if (transceiver.mLineIndex === undefined) {\n        transceiver.mLineIndex = description.media.length;\n        description.media.push(mediaDescription);\n      } else {\n        description.media[transceiver.mLineIndex] = mediaDescription;\n      }\n    }\n\n    if (\n      sctpTransport &&\n      !description.media.find((m) => m.kind === \"application\")\n    ) {\n      sctpTransport.mLineIndex = description.media.length;\n      if (sctpTransport.mid == undefined) {\n        sctpTransport.mid = this.allocateMid(this.midSuffix ? \"dc\" : \"\");\n      }\n      description.media.push(this.createMediaDescriptionForSctp(sctpTransport));\n    }\n\n    if (this.bundlePolicy !== \"disable\") {\n      const mids = description.media\n        .map((m) => (m.direction !== \"inactive\" ? m.rtp.muxId : undefined))\n        .filter((v) => v) as string[];\n      if (mids.length) {\n        const bundle = new GroupDescription(\"BUNDLE\", mids);\n        description.group.push(bundle);\n      }\n    }\n\n    return description;\n  }\n\n  /**\n   * アンサーSDPを構築\n   */\n  buildAnswerSdp({\n    transceivers,\n    sctpTransport,\n    signalingState,\n  }: {\n    transceivers: RTCRtpTransceiver[];\n    sctpTransport: RTCSctpTransport | undefined;\n\n    signalingState: string;\n  }): SessionDescription {\n    if (\n      ![\"have-remote-offer\", \"have-local-pranswer\"].includes(signalingState)\n    ) {\n      throw new Error(\"createAnswer failed\");\n    }\n    if (!this._remoteDescription) {\n      throw new Error(\"wrong state\");\n    }\n\n    const description = new SessionDescription();\n    addSDPHeader(\"answer\", description);\n\n    for (const remoteMedia of this._remoteDescription.media) {\n      let dtlsTransport!: RTCDtlsTransport;\n      let media: MediaDescription;\n\n      if ([\"audio\", \"video\"].includes(remoteMedia.kind)) {\n        const transceiver = transceivers.find(\n          (t) => t.mid === remoteMedia.rtp.muxId,\n        );\n        if (!transceiver) {\n          throw new Error(\n            `Transceiver with mid=${remoteMedia.rtp.muxId} not found`,\n          );\n        }\n        media = this.createMediaDescriptionForTransceiver(\n          transceiver,\n          andDirection(transceiver.direction, transceiver.offerDirection),\n        );\n        dtlsTransport = transceiver.dtlsTransport;\n      } else if (remoteMedia.kind === \"application\") {\n        if (!sctpTransport || !sctpTransport.mid) {\n          throw new Error(\"sctpTransport not found\");\n        }\n        media = this.createMediaDescriptionForSctp(sctpTransport);\n\n        dtlsTransport = sctpTransport.dtlsTransport;\n      } else {\n        throw new Error(\"invalid kind\");\n      }\n\n      // # determine DTLS role, or preserve the currently configured role\n      if (media.dtlsParams) {\n        if (dtlsTransport.role === \"auto\") {\n          media.dtlsParams.role = \"client\";\n        } else {\n          media.dtlsParams.role = dtlsTransport.role;\n        }\n      }\n\n      // Simulcastに関する処理\n      if (\n        remoteMedia.simulcastParameters &&\n        remoteMedia.simulcastParameters.length > 0\n      ) {\n        media.simulcastParameters = remoteMedia.simulcastParameters.map(\n          (v) => ({\n            ...v,\n            direction: v.direction === \"send\" ? \"recv\" : \"send\",\n          }),\n        );\n      }\n\n      description.media.push(media);\n    }\n\n    if (this.bundlePolicy !== \"disable\") {\n      const bundle = new GroupDescription(\"BUNDLE\", []);\n      for (const media of description.media) {\n        if (media.direction !== \"inactive\") {\n          bundle.items.push(media.rtp.muxId!);\n        }\n      }\n      description.group.push(bundle);\n    }\n\n    return description;\n  }\n\n  setLocalDescription(description: SessionDescription) {\n    this.currentLocalDescription = description;\n    if (description.type === \"answer\") {\n      this.pendingLocalDescription = undefined;\n    } else {\n      this.pendingLocalDescription = description;\n    }\n  }\n\n  setRemoteDescription(\n    sessionDescription: RTCSessionDescriptionInit,\n    signalingState: string,\n  ) {\n    if (\n      !sessionDescription.sdp ||\n      !sessionDescription.type ||\n      sessionDescription.type === \"rollback\" ||\n      sessionDescription.type === \"pranswer\"\n    ) {\n      throw new Error(\"invalid sessionDescription\");\n    }\n\n    // # parse and validate description\n    const remoteSdp = this.parseSdp({\n      sdp: sessionDescription.sdp,\n      isLocal: false,\n      signalingState,\n      type: sessionDescription.type,\n    });\n\n    if (remoteSdp.type === \"answer\") {\n      this.currentRemoteDescription = remoteSdp;\n      this.pendingRemoteDescription = undefined;\n    } else {\n      this.pendingRemoteDescription = remoteSdp;\n    }\n\n    return remoteSdp;\n  }\n\n  registerMid(mid: string): void {\n    this.seenMid.add(mid);\n  }\n\n  get remoteIsBundled() {\n    const remoteSdp = this._remoteDescription;\n    if (!remoteSdp) {\n      return undefined;\n    }\n    const bundle = remoteSdp.group.find(\n      (g) => g.semantic === \"BUNDLE\" && this.bundlePolicy !== \"disable\",\n    );\n    return bundle;\n  }\n\n  /**\n   * ローカルセッション記述を設定し、トランスポート情報を追加する\n   */\n  setLocal(\n    description: SessionDescription,\n    transceivers: RTCRtpTransceiver[],\n    sctpTransport?: { dtlsTransport: RTCDtlsTransport; mid?: string },\n  ) {\n    description.media\n      .filter((m) => [\"audio\", \"video\"].includes(m.kind))\n      .forEach((m, i) => {\n        this.addTransportDescription(m, transceivers[i].dtlsTransport);\n      });\n    const sctpMedia = description.media.find((m) => m.kind === \"application\");\n    if (sctpTransport && sctpMedia) {\n      this.addTransportDescription(sctpMedia, sctpTransport.dtlsTransport);\n    }\n\n    this.setLocalDescription(description);\n  }\n}\n\nexport interface RTCSessionDescriptionInit {\n  sdp?: string;\n  type: RTCSdpType;\n}\nexport type RTCSdpType = \"answer\" | \"offer\" | \"pranswer\" | \"rollback\";\n"]}