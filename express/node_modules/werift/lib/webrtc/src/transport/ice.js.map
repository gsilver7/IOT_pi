{"version":3,"file":"ice.js","sourceRoot":"","sources":["../../../../src/transport/ice.ts"],"names":[],"mappings":"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","sourcesContent":["import { v4 } from \"uuid\";\nimport { Event, debug } from \"../imports/common\";\n\nimport {\n  Candidate,\n  Connection,\n  type IceConnection,\n  type IceOptions,\n} from \"../../../ice/src\";\nimport {\n  type RTCIceCandidatePairStats,\n  type RTCIceCandidateStats,\n  type RTCStats,\n  generateStatsId,\n  getStatsTimestamp,\n} from \"../media/stats\";\nimport { candidateFromSdp, candidateToSdp } from \"../sdp\";\n\nconst log = debug(\"werift:packages/webrtc/src/transport/ice.ts\");\n\n/**\n *                                          +------------+\n                                            |            |\n                                            |disconnected|\n                                            |            |\n                                            +------------+\n                                            ^           ^\n                                            |           |\n+------+      +----------+      +-----------+      +----------+\n|      |      |          |      |           |      |          |\n| new  | ---> | checking | ---> | connected | ---> | completed|\n|      |      |          |      |           |      |          |\n+------+      +----+-----+      +-----------+      +----------+\n                    |           \n                    |           \n                    v           \n                +-------+       \n                |       |      \n                | failed|      \n                |       |      \n                +-------+      \n */\n\nexport class RTCIceTransport {\n  readonly id = v4();\n  connection: IceConnection;\n  state: RTCIceConnectionState = \"new\";\n  private waitStart?: Event<[]>;\n  private renominating = false;\n\n  readonly onStateChange = new Event<[RTCIceConnectionState]>();\n  readonly onIceCandidate = new Event<[IceCandidate | undefined]>();\n  readonly onNegotiationNeeded = new Event<[]>();\n\n  constructor(private iceGather: RTCIceGatherer) {\n    this.connection = this.iceGather.connection;\n    this.connection.stateChanged.subscribe((state) => {\n      this.setState(state);\n    });\n    this.iceGather.onIceCandidate = (candidate) => {\n      this.onIceCandidate.execute(candidate);\n    };\n  }\n\n  get role() {\n    if (this.connection.iceControlling) return \"controlling\";\n    else return \"controlled\";\n  }\n\n  get gatheringState() {\n    return this.iceGather.gatheringState;\n  }\n\n  get localCandidates() {\n    return this.iceGather.localCandidates;\n  }\n\n  get localParameters() {\n    return this.iceGather.localParameters;\n  }\n\n  private setState(state: RTCIceConnectionState) {\n    if (state !== this.state) {\n      this.state = state;\n\n      this.onStateChange.execute(state);\n    }\n  }\n\n  gather() {\n    return this.iceGather.gather();\n  }\n\n  addRemoteCandidate = (candidate?: IceCandidate) => {\n    if (!this.connection.remoteCandidatesEnd) {\n      if (!candidate) {\n        return this.connection.addRemoteCandidate(undefined);\n      } else {\n        return this.connection.addRemoteCandidate(candidateToIce(candidate));\n      }\n    }\n  };\n\n  setRemoteParams(remoteParameters: RTCIceParameters, renomination = false) {\n    if (renomination) {\n      this.renominating = true;\n    }\n    if (\n      this.connection.remoteUsername &&\n      this.connection.remotePassword &&\n      (this.connection.remoteUsername !== remoteParameters.usernameFragment ||\n        this.connection.remotePassword !== remoteParameters.password)\n    ) {\n      if (this.renominating) {\n        log(\"renomination\", remoteParameters);\n        this.connection.resetNominatedPair();\n        this.renominating = false;\n      } else {\n        log(\"restart\", remoteParameters);\n        this.restart();\n      }\n    }\n    this.connection.setRemoteParams(remoteParameters);\n  }\n\n  restart() {\n    this.connection.restart();\n    this.setState(\"new\");\n    this.iceGather.gatheringState = \"new\";\n    this.waitStart = undefined;\n    this.onNegotiationNeeded.execute();\n  }\n\n  async start() {\n    if (this.state === \"closed\") {\n      throw new Error(\"RTCIceTransport is closed\");\n    }\n    if (!this.connection.remotePassword || !this.connection.remoteUsername) {\n      throw new Error(\"remoteParams missing\");\n    }\n\n    if (this.waitStart) {\n      await this.waitStart.asPromise();\n    }\n    this.waitStart = new Event();\n\n    this.setState(\"checking\");\n\n    try {\n      await this.connection.connect();\n    } catch (error) {\n      this.setState(\"failed\");\n      throw error;\n    }\n\n    this.waitStart.execute();\n    this.waitStart.complete();\n    this.waitStart = undefined;\n  }\n\n  async stop() {\n    if (this.state !== \"closed\") {\n      this.setState(\"closed\");\n      await this.connection.close();\n    }\n    this.onStateChange.complete();\n    this.onIceCandidate.complete();\n    this.onNegotiationNeeded.complete();\n  }\n\n  async getStats(): Promise<RTCStats[]> {\n    const timestamp = getStatsTimestamp();\n    const stats: RTCStats[] = [];\n\n    // Local candidates\n    for (const candidate of this.localCandidates) {\n      const candidateStats: RTCIceCandidateStats = {\n        type: \"local-candidate\",\n        id: generateStatsId(\"local-candidate\", candidate.foundation),\n        timestamp,\n        transportId: generateStatsId(\"transport\", this.id),\n        address: candidate.ip,\n        port: candidate.port,\n        protocol: candidate.protocol,\n        candidateType: candidate.type as any,\n        priority: candidate.priority,\n        foundation: candidate.foundation,\n      };\n      stats.push(candidateStats);\n    }\n\n    // Remote candidates\n    for (const candidate of this.connection.remoteCandidates) {\n      const ice = candidateFromIce(candidate);\n      const candidateStats: RTCIceCandidateStats = {\n        type: \"remote-candidate\",\n        id: generateStatsId(\"remote-candidate\", ice.foundation),\n        timestamp,\n        transportId: generateStatsId(\"transport\", this.id),\n        address: ice.ip,\n        port: ice.port,\n        protocol: ice.protocol,\n        candidateType: ice.type as any,\n        priority: ice.priority,\n        foundation: ice.foundation,\n      };\n      stats.push(candidateStats);\n    }\n\n    // Candidate pairs\n    const pairs = this.connection?.candidatePairs\n      ? [\n          ...this.connection.candidatePairs.filter((p) => p.nominated),\n          ...this.connection.candidatePairs.filter((p) => !p.nominated),\n        ]\n      : [];\n    for (const pair of pairs) {\n      const pairStats: RTCIceCandidatePairStats = {\n        type: \"candidate-pair\",\n        id: generateStatsId(\"candidate-pair\", pair.foundation),\n        timestamp,\n        transportId: generateStatsId(\"transport\", this.id),\n        localCandidateId: generateStatsId(\n          \"local-candidate\",\n          pair.localCandidate.foundation,\n        ),\n        remoteCandidateId: generateStatsId(\n          \"remote-candidate\",\n          pair.remoteCandidate.foundation,\n        ),\n        state: pair.state as any,\n        nominated: pair.nominated,\n        packetsSent: pair.packetsSent,\n        packetsReceived: pair.packetsReceived,\n        bytesSent: pair.bytesSent,\n        bytesReceived: pair.bytesReceived,\n        currentRoundTripTime: pair.rtt,\n      };\n      stats.push(pairStats);\n    }\n\n    return stats;\n  }\n}\n\nexport const IceTransportStates = [\n  \"new\",\n  \"checking\",\n  \"connected\",\n  \"completed\",\n  \"disconnected\",\n  \"failed\",\n  \"closed\",\n] as const;\nexport type RTCIceConnectionState = (typeof IceTransportStates)[number];\n\nexport const IceGathererStates = [\"new\", \"gathering\", \"complete\"] as const;\nexport type IceGathererState = (typeof IceGathererStates)[number];\n\nexport class RTCIceGatherer {\n  onIceCandidate: (candidate: IceCandidate | undefined) => void = () => {};\n  gatheringState: IceGathererState = \"new\";\n  readonly connection: IceConnection;\n\n  readonly onGatheringStateChange = new Event<[IceGathererState]>();\n\n  constructor(private options: Partial<IceOptions> = {}) {\n    this.connection = new Connection(false, this.options);\n    this.connection.onIceCandidate.subscribe((candidate) => {\n      this.onIceCandidate(candidateFromIce(candidate));\n    });\n  }\n\n  async gather() {\n    if (this.gatheringState === \"new\") {\n      this.setState(\"gathering\");\n      await this.connection.gatherCandidates();\n      this.onIceCandidate(undefined);\n      this.setState(\"complete\");\n    }\n  }\n\n  get localCandidates() {\n    return this.connection.localCandidates.map(candidateFromIce);\n  }\n\n  get localParameters() {\n    const params = new RTCIceParameters({\n      usernameFragment: this.connection.localUsername,\n      password: this.connection.localPassword,\n    });\n\n    return params;\n  }\n\n  private setState(state: IceGathererState) {\n    if (state !== this.gatheringState) {\n      this.gatheringState = state;\n      this.onGatheringStateChange.execute(state);\n    }\n  }\n}\n\nexport function candidateFromIce(c: Candidate) {\n  const candidate = new IceCandidate(\n    c.component,\n    c.foundation,\n    c.host,\n    c.port,\n    c.priority,\n    c.transport,\n    c.type,\n    c.generation,\n    c.ufrag,\n  );\n  candidate.relatedAddress = c.relatedAddress;\n  candidate.relatedPort = c.relatedPort;\n  candidate.tcpType = c.tcptype;\n  return candidate;\n}\n\nexport function candidateToIce(x: IceCandidate) {\n  return new Candidate(\n    x.foundation,\n    x.component,\n    x.protocol,\n    x.priority,\n    x.ip,\n    x.port,\n    x.type,\n    x.relatedAddress,\n    x.relatedPort,\n    x.tcpType,\n    x.generation,\n    x.ufrag,\n  );\n}\n\nexport interface RTCIceCandidateInit {\n  candidate?: string;\n  sdpMLineIndex?: number | null;\n  sdpMid?: string | null;\n  usernameFragment?: string | null;\n}\n\nexport class RTCIceCandidate {\n  candidate!: string;\n  sdpMid?: string;\n  sdpMLineIndex?: number;\n  usernameFragment?: string;\n\n  constructor(props: Partial<RTCIceCandidate>) {\n    Object.assign(this, props);\n  }\n\n  static fromSdp(sdp: string): RTCIceCandidate {\n    const ice = Candidate.fromSdp(sdp);\n    const candidate = candidateFromIce(ice);\n    return candidate.toJSON();\n  }\n\n  static isThis(o: any) {\n    if (typeof o?.candidate === \"string\") return true;\n  }\n\n  toJSON() {\n    return {\n      candidate: this.candidate,\n      sdpMid: this.sdpMid,\n      sdpMLineIndex: this.sdpMLineIndex,\n      usernameFragment: this.usernameFragment,\n    };\n  }\n}\n\nexport class IceCandidate {\n  // \"\"\"\n  // The :class:`RTCIceCandidate` interface represents a candidate Interactive\n  // Connectivity Establishment (ICE) configuration which may be used to\n  // establish an RTCPeerConnection.\n  // \"\"\"\n  public relatedAddress?: string;\n  public relatedPort?: number;\n  public sdpMid?: string;\n  public sdpMLineIndex?: number;\n  public tcpType?: string;\n\n  constructor(\n    public component: number,\n    public foundation: string,\n    public ip: string,\n    public port: number,\n    public priority: number,\n    public protocol: string,\n    public type: string,\n    public generation?: number,\n    public ufrag?: string,\n  ) {}\n\n  toJSON(): RTCIceCandidate {\n    return new RTCIceCandidate({\n      candidate: candidateToSdp(this),\n      sdpMLineIndex: this.sdpMLineIndex,\n      sdpMid: this.sdpMid,\n      usernameFragment: this.ufrag,\n    });\n  }\n\n  static fromJSON(data: RTCIceCandidate | RTCIceCandidateInit) {\n    try {\n      if (!data.candidate) {\n        throw new Error(\"candidate is required\");\n      }\n      const candidate = candidateFromSdp(data.candidate);\n      candidate.sdpMLineIndex = data.sdpMLineIndex ?? undefined;\n      candidate.sdpMid = data.sdpMid ?? undefined;\n      return candidate;\n    } catch (error) {}\n  }\n}\n\nexport class RTCIceParameters {\n  iceLite = false;\n  usernameFragment!: string;\n  password!: string;\n\n  constructor(props: Partial<RTCIceParameters> = {}) {\n    Object.assign(this, props);\n  }\n}\n"]}